inputs:
  bitbake_prefix:
    default: ''
  bitbake_target:
    default: 'cog'
  # SOURCE: raspberrypi3-mesa-wpe-2.38 raspberrypi3-mesa poky layers.python2.raspberrypi.qt5.webkit conf_v3.wpe-2_38
  bitbake_source:
    default: 'source'
  repo_release:
    default: 'scarthgap'
runs:
  using: 'composite'
  steps:
    - name: Print environment
      shell: bash
      run:  |
        echo "Environment:"
        echo "======================================================================"
        echo "BITBAKE_PREFIX=${{ inputs.bitbake_prefix }}"
        echo "BITBAKE_SOURCE=${{ inputs.bitbake_source }}"
        echo "BITBAKE_TARGET=${{ inputs.bitbake_target }}"
        echo "RELEASE=${{ inputs.repo_release }}"
        echo "======================================================================"
    - name: Clean the build dir
      shell: bash
      run:  |
        rm -rf ~/yocto-webkit-${{ inputs.repo_release }}
        rm -rf ~/yocto-webkit-${{ inputs.repo_release }}.tar
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: yocto-webkit-${{ inputs.repo_release }}
        path:  ~/
    - name: Untar Work Dir
      shell: bash
      run:  |
        cd ~
        tar -xf yocto-webkit-${{ inputs.repo_release }}.tar
        rm -rf ~/yocto-webkit-${{ inputs.repo_release }}.tar
    - name: Build
      shell: bash
      run:  |
        cd ~/yocto-webkit-${{ inputs.repo_release }}
        mkdir ~/yocto-webkit-${{ inputs.repo_release }}/builds/
        cp /local-host.conf ~/yocto-webkit-${{ inputs.repo_release }}/builds/
        ulimit -n 4096
        source sources/meta-webkit/.github/scripts/setup-environment ${{ inputs.bitbake_source }}
        rm -rf tmp
        MAX_RETRIES=5
        export ${{ inputs.bitbake_prefix }}
        for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i to fetch sources for ${{ inputs.bitbake_target }} ..."
            if bitbake ${{ inputs.bitbake_target }} --runall=fetch; then
                echo "All sources fetched successfully."
                break
            fi

            if [ $i -lt $MAX_RETRIES ]; then
                echo "Retrying fetch process..."
            else
                echo "Max retries reached. Some sources may still be missing."
            fi
        done
        bitbake ${{ inputs.bitbake_target }}
    - name: Clean the tmp dir
      if: always()
      shell: bash
      run:  |
        rm -rf ~/yocto-webkit-${{ inputs.repo_release }}/builds/*/tmp

