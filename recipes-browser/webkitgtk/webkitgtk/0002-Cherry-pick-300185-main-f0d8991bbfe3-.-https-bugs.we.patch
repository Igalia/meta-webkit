From 26b41a5e48a07b9d897ba736f4a13a1973f726cf Mon Sep 17 00:00:00 2001
From: Thomas Devoogdt <thomas.devoogdt@barco.com>
Date: Thu, 18 Sep 2025 14:47:03 -0700
Subject: Cherry-pick 300185@main (f0d8991bbfe3).
 https://bugs.webkit.org/show_bug.cgi?id=299089
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

    WebCore: fix compilation if ENABLE(VIDEO) is not set

    https://bugs.webkit.org/show_bug.cgi?id=299089

    Reviewed by Michael Catanzaro.

    Source/WebCore/dom/DocumentFullscreen.cpp: In member function ‘void WebCore::DocumentFullscreen::requestFullscreen(WTF::Ref<WebCore::Element>&&, FullscreenCheckType, WTF::CompletionHandler<void(WebCore::ExceptionOr<void>)>&&, WebCore::MediaPlayerEnums::VideoFullscreenMode)’:
    Source/WebCore/dom/DocumentFullscreen.cpp:156:40: error: invalid use of incomplete type ‘class WebCore::HTMLVideoElement’
      156 |             CheckedPtr renderer = video->renderer();
          |                                        ^~

    Source/WebCore/inspector/agents/InspectorDOMAgent.cpp:3171:90: error: ‘VideoProjectionMetadataKind’ was not declared in this scope; did you mean ‘Inspector::Protocol::DOM::VideoProjectionMetadataKind’?
     3171 | static Inspector::Protocol::DOM::VideoProjectionMetadataKind videoProjectionMetadataKind(VideoProjectionMetadataKind kind)
          |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
          |                                                                                          Inspector::Protocol::DOM::VideoProjectionMetadataKind

    Source/WebCore/platform/MediaStrategy.h:73:13: error: no declaration matches ‘void WebCore::MediaStrategy::nativeImageFromVideoFrame(const WebCore::VideoFrame&, WTF::CompletionHandler<void(std::optional<WTF::RefPtr<WebCore::NativeImage> >&&)>&&)’
       73 | inline void MediaStrategy::nativeImageFromVideoFrame(const VideoFrame&, CompletionHandler<void(std::optional<RefPtr<NativeImage>>&&)>&& completionHandler)
          |             ^~~~~~~~~~~~~

    Source/WebCore/page/Page.cpp:3105:18: error: ‘class WebCore::Document’ has no member named ‘shouldSuppressHDRDidChange’
     3105 |         document.shouldSuppressHDRDidChange();
          |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~

    Source/WebCore/rendering/RenderReplaced.cpp: In function ‘bool WebCore::shouldRepaintOnSizeChange(RenderReplaced&)’:
    Source/WebCore/rendering/RenderReplaced.cpp:123:88: error: ‘RenderMedia’ was not declared in this scope; did you mean ‘RenderMeter’?
      123 |     if (auto* renderImage = dynamicDowncast<RenderImage>(renderer); renderImage && !is<RenderMedia>(*renderImage) && !renderImage->isShowingMissingOrImageError())
          |                                                                                        ^~~~~~~~~~~
          |                                                                                        RenderMeter

    Signed-off-by: Thomas Devoogdt <thomas.devoogdt@barco.com>
    Canonical link: https://commits.webkit.org/300185@main

Canonical link: https://commits.webkit.org/298234.142@webkitglib/2.50
---
 Source/WebCore/dom/DocumentFullscreen.cpp             | 2 ++
 Source/WebCore/inspector/agents/InspectorDOMAgent.cpp | 2 ++
 Source/WebCore/page/Page.cpp                          | 3 +++
 Source/WebCore/platform/MediaStrategy.h               | 2 ++
 Source/WebCore/rendering/RenderReplaced.cpp           | 4 ++++
 5 files changed, 13 insertions(+)

Upstream-Status: Backport [https://bugs.webkit.org/show_bug.cgi?id=299089]

diff --git a/Source/WebCore/dom/DocumentFullscreen.cpp b/Source/WebCore/dom/DocumentFullscreen.cpp
index 67c4d0097255..4a4e89269cf1 100644
--- a/Source/WebCore/dom/DocumentFullscreen.cpp
+++ b/Source/WebCore/dom/DocumentFullscreen.cpp
@@ -144,6 +144,7 @@ void DocumentFullscreen::requestFullscreen(Ref<Element>&& element, FullscreenChe
             return;
         }
 
+#if ENABLE(VIDEO)
         Ref videoList = maybeVideoList.releaseReturnValue();
 
         RefPtr<HTMLVideoElement> largestVideo = nullptr;
@@ -166,6 +167,7 @@ void DocumentFullscreen::requestFullscreen(Ref<Element>&& element, FullscreenChe
         }
         if (largestVideo)
             largestVideo->webkitRequestFullscreen();
+#endif
 
         completionHandler({ });
         return;
diff --git a/Source/WebCore/inspector/agents/InspectorDOMAgent.cpp b/Source/WebCore/inspector/agents/InspectorDOMAgent.cpp
index c59246c9c65a..56323c4a9de2 100644
--- a/Source/WebCore/inspector/agents/InspectorDOMAgent.cpp
+++ b/Source/WebCore/inspector/agents/InspectorDOMAgent.cpp
@@ -3168,6 +3168,7 @@ Inspector::Protocol::ErrorStringOr<void> InspectorDOMAgent::setAllowEditingUserA
     return { };
 }
 
+#if ENABLE(VIDEO)
 static Inspector::Protocol::DOM::VideoProjectionMetadataKind videoProjectionMetadataKind(VideoProjectionMetadataKind kind)
 {
     switch (kind) {
@@ -3189,6 +3190,7 @@ static Inspector::Protocol::DOM::VideoProjectionMetadataKind videoProjectionMeta
     ASSERT_NOT_REACHED();
     return Inspector::Protocol::DOM::VideoProjectionMetadataKind::Unknown;
 }
+#endif
 
 Inspector::Protocol::ErrorStringOr<Ref<Inspector::Protocol::DOM::MediaStats>> InspectorDOMAgent::getMediaStats(Inspector::Protocol::DOM::NodeId nodeId)
 {
diff --git a/Source/WebCore/page/Page.cpp b/Source/WebCore/page/Page.cpp
index 8744b85947c4..83e5548ced6f 100644
--- a/Source/WebCore/page/Page.cpp
+++ b/Source/WebCore/page/Page.cpp
@@ -3101,9 +3101,12 @@ void Page::setShouldSuppressHDR(bool shouldSuppressHDR)
         return;
 
     m_shouldSuppressHDR = shouldSuppressHDR;
+
+#if ENABLE(VIDEO)
     forEachDocument([](auto& document) {
         document.shouldSuppressHDRDidChange();
     });
+#endif
 }
 
 #if ENABLE(MEDIA_STREAM)
diff --git a/Source/WebCore/platform/MediaStrategy.h b/Source/WebCore/platform/MediaStrategy.h
index d9935ebf6b2f..d5d43889bb8b 100644
--- a/Source/WebCore/platform/MediaStrategy.h
+++ b/Source/WebCore/platform/MediaStrategy.h
@@ -70,9 +70,11 @@ protected:
     bool m_mockMediaSourceEnabled { false };
 };
 
+#if ENABLE(VIDEO)
 inline void MediaStrategy::nativeImageFromVideoFrame(const VideoFrame&, CompletionHandler<void(std::optional<RefPtr<NativeImage>>&&)>&& completionHandler)
 {
     completionHandler(std::nullopt);
 }
+#endif
 
 } // namespace WebCore
diff --git a/Source/WebCore/rendering/RenderReplaced.cpp b/Source/WebCore/rendering/RenderReplaced.cpp
index 46a08a0f5811..9bbf09290486 100644
--- a/Source/WebCore/rendering/RenderReplaced.cpp
+++ b/Source/WebCore/rendering/RenderReplaced.cpp
@@ -120,8 +120,12 @@ static bool shouldRepaintOnSizeChange(RenderReplaced& renderer)
 {
     if (is<RenderHTMLCanvas>(renderer))
         return true;
+
+#if ENABLE(VIDEO)
     if (auto* renderImage = dynamicDowncast<RenderImage>(renderer); renderImage && !is<RenderMedia>(*renderImage) && !renderImage->isShowingMissingOrImageError())
         return true;
+#endif
+
     return false;
 }
 
-- 
2.43.0

