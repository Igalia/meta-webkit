From d29a4a8f5ab504f8d1476fd282454c3e662e695d Mon Sep 17 00:00:00 2001
From: Ross Kirsling <ross.kirsling@sony.com>
Date: Wed, 14 Apr 2021 00:24:50 +0000
Subject: [PATCH] Move cloneUBreakIterator declaration to IntlWorkaround.h
 https://bugs.webkit.org/show_bug.cgi?id=224511

Reviewed by Yusuke Suzuki.

Follow up to r275856. There's ultimately no reason IntlWorkaround.cpp needs to be headerless;
this was tied to some confusion about how to successfully include ubrk.h in two different ways.

* JavaScriptCore.xcodeproj/project.pbxproj:
* runtime/IntlSegmenter.cpp:
* runtime/IntlSegmenter.h:
* runtime/IntlSegments.cpp:
* runtime/IntlWorkaround.cpp:
* runtime/IntlWorkaround.h: Added.


Canonical link: https://commits.webkit.org/236483@main
git-svn-id: https://svn.webkit.org/repository/webkit/trunk@275920 268f45cc-cd09-0410-ab3c-d52691b4dbfc
---
 Source/JavaScriptCore/ChangeLog               | 17 ++++++++++++++
 .../JavaScriptCore.xcodeproj/project.pbxproj  |  4 ++++
 .../JavaScriptCore/runtime/IntlSegmenter.cpp  |  1 +
 Source/JavaScriptCore/runtime/IntlSegmenter.h |  4 ----
 .../JavaScriptCore/runtime/IntlSegments.cpp   |  1 +
 .../JavaScriptCore/runtime/IntlWorkaround.cpp | 13 ++++-------
 .../{IntlWorkaround.cpp => IntlWorkaround.h}  | 23 +++----------------
 7 files changed, 31 insertions(+), 32 deletions(-)
 copy Source/JavaScriptCore/runtime/{IntlWorkaround.cpp => IntlWorkaround.h} (74%)

--- a/Source/JavaScriptCore/runtime/IntlSegmenter.cpp
+++ b/Source/JavaScriptCore/runtime/IntlSegmenter.cpp
@@ -28,6 +28,7 @@
 
 #include "IntlObjectInlines.h"
 #include "IntlSegments.h"
+#include "IntlWorkaround.h"
 #include "JSCInlines.h"
 #include "ObjectConstructor.h"
 
--- a/Source/JavaScriptCore/runtime/IntlSegmenter.h
+++ b/Source/JavaScriptCore/runtime/IntlSegmenter.h
@@ -75,8 +75,4 @@ private:
     Granularity m_granularity { Granularity::Grapheme };
 };
 
-// Abstraction to call ubrk_safeClone or ubrk_clone depending on ICU version.
-// This is implemented in IntlWorkaround.cpp in order to confine draft API visibility.
-UBreakIterator* cloneUBreakIterator(const UBreakIterator*, UErrorCode*);
-
 } // namespace JSC
--- a/Source/JavaScriptCore/runtime/IntlSegments.cpp
+++ b/Source/JavaScriptCore/runtime/IntlSegments.cpp
@@ -29,6 +29,7 @@
 
 #include "IntlObjectInlines.h"
 #include "IntlSegmentIterator.h"
+#include "IntlWorkaround.h"
 #include "JSCInlines.h"
 #include "ObjectConstructor.h"
 #include <unicode/ucurr.h>
--- a/Source/JavaScriptCore/runtime/IntlWorkaround.cpp
+++ b/Source/JavaScriptCore/runtime/IntlWorkaround.cpp
@@ -24,22 +24,19 @@
  */
 
 #include "config.h"
-
-#include <unicode/uvernum.h>
+#include "IntlWorkaround.h"
 
 // ICU 69 introduces draft API ubrk_clone and deprecates ubrk_safeClone.
-#if U_ICU_VERSION_MAJOR_NUM >= 69
-#define HAVE_ICU_UBRK_CLONE 1
-#endif
-
 #if defined(U_HIDE_DRAFT_API)
 #undef U_HIDE_DRAFT_API
 #endif
 #include <unicode/ubrk.h>
 
-namespace JSC {
+#if U_ICU_VERSION_MAJOR_NUM >= 69
+#define HAVE_ICU_UBRK_CLONE 1
+#endif
 
-UBreakIterator* cloneUBreakIterator(const UBreakIterator*, UErrorCode*);
+namespace JSC {
 
 UBreakIterator* cloneUBreakIterator(const UBreakIterator* iterator, UErrorCode* status)
 {
--- /dev/null
+++ b/Source/JavaScriptCore/runtime/IntlWorkaround.h
@@ -0,0 +1,36 @@
+/*
+ * Copyright (C) 2021 Sony Interactive Entertainment Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+ * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#pragma once
+
+#include <unicode/utypes.h>
+
+struct UBreakIterator;
+
+namespace JSC {
+
+UBreakIterator* cloneUBreakIterator(const UBreakIterator*, UErrorCode*);
+
+} // namespace JSC
